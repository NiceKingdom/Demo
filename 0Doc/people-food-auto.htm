<!doctype html><html lang="zh"><head>    <meta charset="UTF-8">    <meta name="viewport"          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">    <meta http-equiv="X-UA-Compatible" content="ie=edge">    <title>Test</title>    <style>        body {            margin: 0;            overflow: hidden;        }    </style></head><body><canvas id="canvas">    看到该内容，说明您的浏览器不支持 Canvas 绘图。</canvas><script>  /* 绘图部分 */  let progress = 0;  let datas = [];  let width = 0  let height = 0  let canvas = document.getElementById('canvas');  if (canvas.getContext) {    width = canvas.width = window.innerWidth;    height = canvas.height = 400;    window.requestAnimationFrame(render);  }  function render() {    progress += 1;    let canvas = document.getElementById('canvas');    if (canvas.getContext){      let ctx = canvas.getContext('2d');      ctx.clearRect(0, 0, width, height);      ctx.font = "12px serif";      ctx.fillText("人口", width - 82, 39);      ctx.fillText("粮食", width - 82, 59);      ctx.fillStyle = '#0056ff';      ctx.fillRect(width - 100, 30, 15, 10);      ctx.fillStyle = '#00a47a';      ctx.fillRect(width - 100, 50, 15, 10);      ctx.fillStyle = '#ff626e';      ctx.fillRect(0, height - 300, width, 1);      ctx.fillStyle = '#ffb97e';      ctx.fillRect(0, height - 100, width, 1);      ctx.fillStyle = '#d4eb92';      ctx.fillRect(0, height - 20, width, 1);      for (let i = 0; i < datas.length; i++) {        ctx.fillStyle = '#0056ff';        ctx.fillRect(i, height - datas[i][0].people, 1, 1);        ctx.fillStyle = '#00a47a';        ctx.fillRect(i, height - datas[i][0].food * 3, 1, 1);      }    }    if (progress < width * 10) {      autoResource();      window.requestAnimationFrame(render);    }  }  /* 计算部分 */  let productOne = 0.01111111111  let occupyOne = 0.00666666666  let food = 0  let farm = 60  let people = 101  let peopleMin = 101  let foodMin = 5  let peopleMax = 101  let foodMax = 0  let num = 0  let peopleMinNum = 0  let peopleMaxNum = 0  let foodMinNum = 0  let foodMaxNum = 0  let x = 0  function autoResource() {    if (people * occupyOne < food) {      people *= 1.0004 + x      x += 0.00011      if (x > 0.006) {        x = 0.004      }    } else {      people *= 0.9995 + x      x -= 0.00014      if (x < -0.01) {        x = -0.0088      }    }    food -= people * occupyOne    if (food < 0) {      food = 0    }    if (people >= farm) {      food += farm * productOne    } else {      food += parseInt(people) * productOne    }    if (peopleMax < people) {      peopleMax = people      peopleMaxNum = num    }    if (foodMax < food) {      foodMax = food      foodMaxNum = num      console.info(        'foodMin: ' + foodMin.toFixed(2)        // + '; foodMinNum: ' + foodMinNum.toFixed(2)        + '; foodMax: ' + foodMax.toFixed(2)        + '; foodMaxNum: ' + foodMaxNum.toFixed(2)        + '; peopleMin: ' + peopleMin.toFixed(2)        // + '; peopleMinNum: ' + peopleMinNum.toFixed(2)        + '; peopleMax: ' + peopleMax.toFixed(2)        // + '; peopleMaxNum: ' + peopleMaxNum.toFixed(2)      )    }    if (peopleMin > people) {      peopleMin = people      peopleMinNum = num    }    if (foodMin >= food) {      foodMin = food      foodMinNum = num      console.info('Num 重置')      num = 0    }    if (datas.length >= width) {      datas.shift()    }    datas.push([{      food : food,      people : people,    }])    num++  }</script></body></html>